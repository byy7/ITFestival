{"remainingRequest":"D:\\Website\\tugasakhir\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Website\\tugasakhir\\src\\components\\Badge.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Website\\tugasakhir\\src\\components\\Badge.vue","mtime":1607335908000},{"path":"D:\\Website\\tugasakhir\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Website\\tugasakhir\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Website\\tugasakhir\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Website\\tugasakhir\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYmFkZ2UnLAogIHByb3BzOiB7CiAgICB0YWc6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnc3BhbicKICAgIH0sCiAgICBocmVmOiBTdHJpbmcsCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2RlZmF1bHQnLAogICAgICB2YWxpZGF0b3I6IHZhbHVlID0+IHsKICAgICAgICBsZXQgYWNjZXB0ZWRWYWx1ZXMgPSBbCiAgICAgICAgICAncHJpbWFyeScsCiAgICAgICAgICAnaW5mbycsCiAgICAgICAgICAnc3VjY2VzcycsCiAgICAgICAgICAnd2FybmluZycsCiAgICAgICAgICAnZGFuZ2VyJywKICAgICAgICAgICdkZWZhdWx0JywKICAgICAgICAgICduZXV0cmFsJwogICAgICAgIF07CiAgICAgICAgcmV0dXJuIGFjY2VwdGVkVmFsdWVzLmluZGV4T2YodmFsdWUpICE9PSAtMTsKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbXBvbmVudFRhZygpIHsKICAgICAgcmV0dXJuIHRoaXMuaHJlZiA/ICdhJyA6IHRoaXMudGFnOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Badge.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Badge.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <component\n    :is=\"componentTag\"\n    class=\"badge\"\n    :class=\"`badge-${type}`\"\n    :href=\"href\"\n  >\n    <slot></slot>\n  </component>\n</template>\n<script>\nexport default {\n  name: 'badge',\n  props: {\n    tag: {\n      type: String,\n      default: 'span'\n    },\n    href: String,\n    type: {\n      type: String,\n      default: 'default',\n      validator: value => {\n        let acceptedValues = [\n          'primary',\n          'info',\n          'success',\n          'warning',\n          'danger',\n          'default',\n          'neutral'\n        ];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    }\n  },\n  computed: {\n    componentTag() {\n      return this.href ? 'a' : this.tag;\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}